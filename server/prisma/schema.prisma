generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Later Add Comments
model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  username String    @unique
  password String
  reviews  Review[]
  Comment  Comment[]
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model Cafe {
  id   Int     @id @default(autoincrement())
  lat  Float
  lon  Float
  type String?

  /// Names
  brand        String?
  name         String
  officialName String?

  spotifyLink String? @db.VarChar(512)

  reviews   Review[]
  CafeStats CafeStats[]
  Comment   Comment[]

  @@unique([lat, lon])
}

model Review {
  id     Int @id @default(autoincrement())
  cafeId Int
  userId Int

  /// Inputs
  wifiStrength Int @default(3)
  freeWifi     Int @default(1)
  outlets      Int @default(3)
  seating      Int @default(3)

  cafe Cafe @relation(fields: [cafeId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([cafeId, userId])
  @@index([userId])
  @@index([cafeId])
}

model CafeStats {
  cafeId Int @id

  /// These should be rounded up why? Idk just felt like it lol
  wifiCount    Int?
  outletCount  Int?
  seatingCount Int?

  /// If wifiFreeCount >= 0 then it's free if it's < 0 it's not free...
  wifiFreeCount Int?

  cafe Cafe @relation(fields: [cafeId], references: [id], onDelete: Cascade)
}

model Comment {
  id     Int @id @default(autoincrement())
  cafeId Int
  userId Int

  username  String
  message   String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamptz(6)

  cafe Cafe @relation(fields: [cafeId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([cafeId])
}
